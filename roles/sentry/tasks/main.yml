- name: ensure sentry directory exists
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /etc/sentry/
    - /var/sentry/

- name: install libxml & libxslt
  apt: name={{ item }}
  with_items: [libxml2-dev,libxslt1-dev]

- name: install sentry and create virtualenv if needed
  pip:
    name: sentry[postgres]
    virtualenv: "{{ venv }}"
    virtualenv_site_packages: no

- name: copy sentry configuration
  template: src=sentry_conf.py.j2
            dest=/etc/sentry/conf.py
  notify: restart nginx

- name: copy nginx configuration for sentry
  template: src=nginx-sentry.conf.j2
            dest=/etc/nginx/sites-available/sentry.conf
            owner={{ nginx_user }}
            group={{ nginx_group }}

- name: link nginx configuration for sentry
  file: src=/etc/nginx/sites-available/sentry.conf
        dest=/etc/nginx/sites-enabled/sentry.conf
        state=link
        owner={{ nginx_user }}
        group={{ nginx_group }}
  notify:
    - restart nginx

- name: copy supervisor configuration for sentry
  template: src=supervisor-sentry.conf.j2
            dest=/etc/supervisor/conf.d/sentry.conf
  notify:
    - reload supervisor

- name: create exec script in venv
  template: src=venv_exec.j2 dest={{ venv }}/exec mode=755

- name: sentry upgrade
  command: "{{ venv }}/exec sentry --config=/etc/sentry/conf.py upgrade"
  notify:
    - restart nginx
    - reload supervisor

# This is a bit of a hack to create a superuser automatically without interactive input. TODO: Create a proper python script for this!
- name: create admin user
  environment:
    sentry_conf: /etc/sentry/conf.py
  command: "{{ venv }}/exec python -c \"from sentry.utils.runner import configure; configure(); from django.db import DEFAULT_DB_ALIAS as database; from sentry.models import User; User.objects.db_manager(database).create_superuser('{{ superuser_sentry.username }}', '{{ superuser_sentry.email }}', '{{ superuser_sentry.password }}')\""
  notify:
    - restart nginx
    - reload supervisor
